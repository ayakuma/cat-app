version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.6.6-node-browsers
      environment:
        - BUNDLER_VERSION: 2.0.2
        - RAILS_ENV: 'test'
    - image: circleci/mysql
      command: mysqld --default-authentication-plugin=mysql_native_password
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
        - MYSQL_ROOT_HOST: '127.0.0.1'

    working_directory: ~/cat-app  #自身のアプリディレクトリ名を設定  


    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        - v1-dependencies-

    - run:
        name: install dependencies
        command: |
          gem install bundler -v 2.0.2
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

    # Database setup
    - run: mv ./config/database.yml.ci ./config/database.yml

    # Database setup
    - run:
        name: Databasesetup
        command: |
           bundle exec rails db:create
           bundle exec rails db:schema:load

    # run tests!
    - run:
        name: Run rspec
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
            circleci tests split --split-by=timings)"

          bundle exec rspec \
            --format progress \
            --format RspecJunitFormatter \
            --out /tmp/test-results/rspec.xml \
            --format progress \
            $TEST_FILES

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results


  rubocop:
    working_directory: ~/cat-app 
    docker:
      - image: circleci/ruby:2.6.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle


  rspec:
    working_directory: ~/cat-app
    docker:
      - image: circleci/ruby
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            set -x
            docker-compose up -d
            docker exec potepanec_app curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      - run:
          name: Setup database
          command: |
            docker-compose exec potepanec bash -c 'yes n | bundle exec rails g spree:install --migrate --seed --sample --auto_accept'
      - run:
          name: Run rspec
          command: docker-compose exec potepanec rspec